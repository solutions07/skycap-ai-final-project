substitutions:
  _REGION: "europe-west1"
  _SERVICE: "skycap-ai-service"
  _PROJECT_ID: "skycap-ai-final-project"

options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Derive short commit sha & timestamp (with fallback for manual runs)
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Derive commit reference (avoid uppercase var to prevent Cloud Build substitution parsing)
        if [ -z "$COMMIT_SHA" ]; then
          commit_ref="HEAD"
        else
          commit_ref="$COMMIT_SHA"
        fi
        short_sha=$(git rev-parse --short=12 "$commit_ref")
        build_timestamp=$(date -u +%Y-%m-%dT%H:%M:%SZ)
        echo "commit_ref=$commit_ref" > build_meta.env
        echo "short_sha=$short_sha" >> build_meta.env
        echo "build_timestamp=$build_timestamp" >> build_meta.env
        echo "APP_VERSION=$short_sha" >> build_meta.env
    id: 'derive-version'

  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -euo pipefail
        source build_meta.env
        echo "Building image with version ${APP_VERSION} (commit $commit_ref)"
        docker build \
          --build-arg COMMIT_SHA=$commit_ref \
          --build-arg BUILD_TIMESTAMP=$build_timestamp \
          --build-arg APP_VERSION=$APP_VERSION \
          -t gcr.io/${_PROJECT_ID}/${_SERVICE}:$APP_VERSION \
          -t gcr.io/${_PROJECT_ID}/${_SERVICE}:latest .
    id: 'build-image'

  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -euo pipefail
        source build_meta.env
        docker push gcr.io/${_PROJECT_ID}/${_SERVICE}:$APP_VERSION
    id: 'push-image-sha'
    waitFor: ['build-image']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/${_PROJECT_ID}/${_SERVICE}:latest'
    id: 'push-image-latest'
    waitFor: ['build-image']

  # Deploy the newly built image with explicit version tag
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -euo pipefail
        source build_meta.env
        gcloud run deploy ${_SERVICE} \
          --image gcr.io/${_PROJECT_ID}/${_SERVICE}:$APP_VERSION \
          --platform=managed \
          --region=${_REGION} \
          --allow-unauthenticated \
          --memory=2Gi \
          --port=8080 \
          --max-instances=3 \
          --timeout=3600
    id: 'deploy'

images:
  - gcr.io/${_PROJECT_ID}/${_SERVICE}:latest